repositories {
    maven {
        url = "https://jitpack.io"
    }
}

dependencies {
    implementation fg.deobf("com.github.Virtuoel:Pehkui:3.8.2-1.20.1-forge")
}

minecraft {
    runs {
        client {
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
        }

        server {
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
        }
        data {
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
        }
    }
}


def compileModsDir = 'compile-mods-1.20.1'
    task addnewfoldersmods(type: DefaultTask){
    	ant.mkdir(dir: 'compile-mods-1.20.1/');
    }
    repositories {
    	flatDir {
    	name "compile-mods" 
    	dir file(compileModsDir)
    	}
    }
          
    dependencies {
    	for (compileModJar in fileTree(dir: compileModsDir, include: '*.jar')) {
    	def basename = compileModJar.name.substring(0, compileModJar.name.length() - ".jar".length()) 
    	def versionSep = basename.lastIndexOf('-') 
    	assert versionSep != -1 
    	def artifactId = basename.substring(0, versionSep) 
    	def version = basename.substring(versionSep + 1)
    	implementation fg.deobf("compile-mods:$artifactId:$version")}
    }
    	minecraft {
    		mappings channel: 'official', version: '1.20.1'
    			accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    		runs {
    			client {
    				workingDirectory project.file('run')
    				property 'forge.logging.markers', 'REGISTRIES'
    				property 'forge.logging.console.level', 'debug'
    				property 'mixin.env.remapRefMap', 'true'
    				property 'mixin.env.refMapRemappingFile', "${buildDir}/build/createSrgToMcp/output.srg"
    				mods {
    					examplemod {
    						source sourceSets.main
    					}
    				}
    			}
    			server {
    				workingDirectory project.file('run')
    				property 'forge.logging.markers', 'REGISTRIES'
    				property 'forge.logging.console.level', 'debug'
    				property 'mixin.env.remapRefMap', 'true'
    				property 'mixin.env.refMapRemappingFile', "${buildDir}/build/createSrgToMcp/output.srg"
    				mods {
    					examplemod {
    						source sourceSets.main
                    }
                }
    		}
    	}
    }


	repositories {
    	maven {
        	name 'tterrag maven'
        	url 'https://maven.tterrag.com'
   	 }
   	maven {
       	name = "Jared's maven"
       	url = "https://maven.blamejared.com/"
  	  }
   	maven {
     	   url 'https://www.cursemaven.com'
      	  content {
				includeGroup "curse.maven"
      	}
   	}
	}

	dependencies {
   	implementation fg.deobf("com.simibubi.create:create-1.20.1:0.5.1.f-26:slim") { transitive = false }
   	implementation fg.deobf("com.jozufozu.flywheel:flywheel-forge-1.20.1:0.6.10-7")
   	implementation fg.deobf("com.tterrag.registrate:Registrate:MC1.20-1.3.3")
		implementation fg.deobf("curse.maven:createaddition-439890:5535846")
	}
	minecraft {
		runs {
			client {
				property 'mixin.env.remapRefMap', 'true'
				property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
				property 'forge.enabledGameTestNamespaces', 'createaddition'
				property 'forge.logging.console.level', 'debug'
				property 'forge.logging.markers', 'REGISTRIES'
			}
		}
	}


repositories {
  maven {
      url = 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
  }
}

dependencies {
  implementation fg.deobf('software.bernie.geckolib:geckolib-forge-1.20.1:4.4.2')
}

minecraft {
  runs {
     client {
        property 'mixin.env.remapRefMap', 'true'
        property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
    }
      server {
        property 'mixin.env.remapRefMap', 'true'
        property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
    }
      data {
        property 'mixin.env.remapRefMap', 'true'
        property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
    }
  }
}


repositories {
  maven {
    name = "Progwml6's maven"
    url = "https://dvs1.progwml6.com/files/maven/"
  }
  maven {
    name = "Jared's maven"
    url = "https://maven.blamejared.com/"
  }
  maven {
    name = "ModMaven"
    url = "https://modmaven.dev"
  }
}

dependencies {
    compileOnly(fg.deobf("mezz.jei:jei-1.20.1-common-api:15.3.0.8"))
    compileOnly(fg.deobf("mezz.jei:jei-1.20.1-forge-api:15.3.0.8"))
    runtimeOnly(fg.deobf("mezz.jei:jei-1.20.1-forge:15.3.0.8"))
}


